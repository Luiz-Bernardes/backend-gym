continue
@client.weight.to_s
continue
@client.weight.to_s
response.body.to_s
response.body.to_f
@client.weight
continue
@user.gym
@user
continue
response.body
continue
build(:telephone, gym: create(:gym)).attributes
build(:telephone).attributes
attributes_for(:telephone)
continue
@telephone.gym.id
@telephone.gym
@telephone.gyms
@telephone
@telephone.emails
@telephone
continue
email = Email.last
Email.last
continue
@email
response.body
continue
response.body
continue
response.body
continue
response.body
continue
response.body
continue
get :index
continue
get :index
continue
render json: serialize_record(@record, options)
continue
render json: serialize_record(@record, options)
@record
 render json: serialize_record(@record, options), status: :created
@record
render json: serialize_record(@record, options), status: :created
continue
@record.trainings.first
@record.trainings
@record
continue
@record.exercises.first.trainings
@record.trainings.first.exercises
@record.trainings.first
@record.trainings
@record.exercises
continue
record_params
continue
@record.exercises.first.qnt_series
@record.exercises.first.qnt_series.class
@record.exercises.first.qnt_series
@record.exercises.first
@record.exercises
@record.exercices
@record.trainings
@record
continue
record_params
continue
record_params
continue
record_params
continue
record_params
continue
params.require(:record)
params.permit(:record)
params
continue
params
continue
record_params
continue
record_params
continue
record_params
continue
params.permit()
continue
params
params.require(:record)
params
continue
render json: serialize_training(@training, options), status: :created, location: @training
@training
continue
Gym.all
gym.save
gym.slug = "hfstudio"
gym.slug = hfstudio
gym.slug
gym = Gym.first
gym = Gym.fist
Gym.all
@gym_by_slug = Gym.find_by(slug: params[:id])
continue
render json: serialize_client(@clients, options)
@clients = Client.all
Client.all
continue
render json: serialize_gym(@gyms, options)
@gyms
continue
